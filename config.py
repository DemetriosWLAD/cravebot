#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è CraveBreaker –±–æ—Ç–∞
"""

import os
from typing import Dict, Any

class Config:
    """–ö–ª–∞—Å—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞"""
    
    def __init__(self):
        # –û—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        self.BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN", "YOUR_BOT_TOKEN_HERE")
        self.DATABASE_PATH = os.getenv("DATABASE_PATH", "cravebreaker.db")
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ—Ä–≤–µ–Ω—Ü–∏–π
        self.DEFAULT_BREATHING_DURATION = 60  # —Å–µ–∫—É–Ω–¥—ã
        self.MIN_INTERVENTION_INTERVAL = 5    # –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –∏–Ω—Ç–µ—Ä–≤–µ–Ω—Ü–∏—è–º–∏ –≤ –º–∏–Ω—É—Ç–∞—Ö
        self.MAX_DAILY_INTERVENTIONS = 50     # –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω—Ç–µ—Ä–≤–µ–Ω—Ü–∏–π –≤ –¥–µ–Ω—å
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        self.STATS_RETENTION_DAYS = 365       # —Å–∫–æ–ª—å–∫–æ –¥–Ω–µ–π —Ö—Ä–∞–Ω–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        self.CLEANUP_INTERVAL_DAYS = 30       # –∫–∞–∫ —á–∞—Å—Ç–æ —á–∏—Å—Ç–∏—Ç—å —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        self.MAX_TRIGGERS_PER_USER = 10       # –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.MAX_TRIGGER_NAME_LENGTH = 50     # –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–∞
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
        self.RATE_LIMIT_REQUESTS = 100        # –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ —á–∞—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        self.MAX_MESSAGE_LENGTH = 1000        # –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        self.DEBUG_MODE = os.getenv("DEBUG", "false").lower() == "true"
        self.LOG_LEVEL = os.getenv("LOG_LEVEL", "INFO")
        
        # –≠–º–æ–¥–∑–∏ –¥–ª—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.EMOJIS = {
            'emergency': 'üÜò',
            'trigger': 'üî•', 
            'stats': 'üìä',
            'about': 'üìñ',
            'success': '‚úÖ',
            'failure': '‚ùå',
            'breathing': 'ü´Å',
            'coaching': 'ü§î',
            'game': 'üéÆ',
            'menu': 'üè†',
            'back': 'üîô',
            'trophy': 'üèÜ',
            'star': '‚≠ê',
            'fire': 'üî•',
            'heart': '‚ù§Ô∏è',
            'muscle': 'üí™',
            'brain': 'üß†'
        }
        
        # –°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö
        self.ERROR_MESSAGES = {
            'bot_token_missing': "‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é TELEGRAM_BOT_TOKEN",
            'database_error': "‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            'rate_limit': "‚è∞ –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ.",
            'invalid_trigger': "‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 2-50 —Å–∏–º–≤–æ–ª–æ–≤.",
            'max_triggers': f"‚ùå –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤: {MAX_TRIGGERS_PER_USER}",
            'generic_error': "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ /start –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞."
        }
        
        # –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        self.MOTIVATIONAL_MESSAGES = {
            'first_success': "üéâ –í–∞—à–∞ –ø–µ—Ä–≤–∞—è –ø–æ–±–µ–¥–∞! –≠—Ç–æ –Ω–∞—á–∞–ª–æ –±–æ–ª—å—à–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π!",
            'streak_3': "üî• 3 —É—Å–ø–µ—Ö–∞ –ø–æ–¥—Ä—è–¥! –í—ã –≤ —É–¥–∞—Ä–µ!",
            'streak_7': "‚≠ê –ù–µ–¥–µ–ª—è –ø–æ–±–µ–¥! –ù–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–π —Å–∞–º–æ–∫–æ–Ω—Ç—Ä–æ–ª—å!",
            'streak_30': "üèÜ –ú–µ—Å—è—Ü —É—Å–ø–µ—Ö–æ–≤! –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞!",
            'comeback': "üí™ –û—Ç–ª–∏—á–Ω–æ–µ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –Ω–µ—É–¥–∞—á–∏!",
            'milestone_10': "üéØ 10 —É—Å–ø–µ—à–Ω—ã—Ö –∏–Ω—Ç–µ—Ä–≤–µ–Ω—Ü–∏–π! –ü—Ä–æ–≥—Ä–µ—Å—Å –≤–ø–µ—á–∞—Ç–ª—è–µ—Ç!",
            'milestone_50': "üíé 50 –ø–æ–±–µ–¥! –í—ã —ç–∫—Å–ø–µ—Ä—Ç —Å–∞–º–æ–∫–æ–Ω—Ç—Ä–æ–ª—è!",
            'milestone_100': "üëë 100 —É—Å–ø–µ—Ö–æ–≤! –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã!"
        }
    
    def get_bot_info(self) -> Dict[str, Any]:
        """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±–æ—Ç–∞"""
        return {
            'version': '1.0.0',
            'name': 'CraveBreaker',
            'description': 'AI-–±–æ—Ç –¥–ª—è –±–æ—Ä—å–±—ã —Å –Ω–∞–≤—è–∑—á–∏–≤—ã–º–∏ –ø—Ä–∏–≤—ã—á–∫–∞–º–∏',
            'features': [
                '–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å –ø—Ä–∏ –∏–º–ø—É–ª—å—Å–∞—Ö',
                '–î—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏', 
                '–ö–æ—É—á–∏–Ω–≥–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã',
                '–û—Ç–≤–ª–µ–∫–∞—é—â–∏–µ –º–∏–Ω–∏-–∏–≥—Ä—ã',
                '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞',
                '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä–∞–º–∏'
            ],
            'supported_languages': ['ru'],
            'max_users': 'unlimited',
            'database': 'SQLite3'
        }
    
    def validate_config(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        if self.BOT_TOKEN == "YOUR_BOT_TOKEN_HERE":
            print(self.ERROR_MESSAGES['bot_token_missing'])
            return False
        
        if self.DEFAULT_BREATHING_DURATION < 30:
            print("‚ùå –°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥—ã—Ö–∞—Ç–µ–ª—å–Ω–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è")
            return False
            
        if self.MAX_TRIGGERS_PER_USER < 1:
            print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤")
            return False
            
        return True
    
    def get_webhook_config(self) -> Dict[str, Any]:
        """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è webhook (–µ—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è)"""
        return {
            'webhook_url': os.getenv("WEBHOOK_URL", ""),
            'webhook_path': os.getenv("WEBHOOK_PATH", "/webhook"),
            'webhook_port': int(os.getenv("WEBHOOK_PORT", "8443")),
            'use_webhook': os.getenv("USE_WEBHOOK", "false").lower() == "true"
        }
    
    def get_logging_config(self) -> Dict[str, Any]:
        """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
        return {
            'level': self.LOG_LEVEL,
            'format': '%(asctime)s - %(name)s - %(levelname)s - %(message)s',
            'file': os.getenv("LOG_FILE", "cravebreaker.log") if not self.DEBUG_MODE else None,
            'max_size': int(os.getenv("LOG_MAX_SIZE", "10485760")),  # 10MB
            'backup_count': int(os.getenv("LOG_BACKUP_COUNT", "5"))
        }
